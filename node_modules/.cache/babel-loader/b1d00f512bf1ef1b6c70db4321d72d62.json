{"ast":null,"code":"var _jsxFileName = \"/Users/zhanerke/Downloads/Saasland_React_April_30_2020/Saasland_React/src/Pages/Dashboard/chat/index.js\";\nimport { MessageBox } from 'react-chat-elements';\nimport { ChatItem, MessageList, ChatList } from 'react-chat-elements';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nfunction Chat(props) {\n  const [chats, setChats] = useState([{\n    id: 1,\n    name: 'Kuanysh'\n  }, {\n    id: 2,\n    name: 'Zhanerke'\n  }, {\n    id: 3,\n    name: 'Abylai'\n  }]);\n\n  const handleClick = e => {\n    props.history.push(`/dashboard/message/${e.chattingUserId}`);\n  };\n\n  useEffect(() => {\n    axios.get('http://10.110.160.50:8008/api/chat?userId=29&secondId=1').then(res => setChats(res.data.map(item => {\n      return {\n        text: item.message,\n        chattingUserId: item.chattingUserId,\n        userId: item.userId\n      };\n    }))).catch(err => err);\n  }, []);\n  return React.createElement(ChatList, {\n    className: \"message-list\",\n    lockable: true,\n    onClick: handleClick,\n    toBottomHeight: '100%',\n    dataSource: chats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n}\n\nexport default withRouter(Chat);","map":{"version":3,"sources":["/Users/zhanerke/Downloads/Saasland_React_April_30_2020/Saasland_React/src/Pages/Dashboard/chat/index.js"],"names":["MessageBox","ChatItem","MessageList","ChatList","React","useState","useEffect","axios","withRouter","Chat","props","chats","setChats","id","name","handleClick","e","history","push","chattingUserId","get","then","res","data","map","item","text","message","userId","catch","err"],"mappings":";AAAA,SAASA,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,QAAgD,qBAAhD;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAC/B;AACIQ,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAD+B,EAK/B;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAL+B,EAS/B;AACID,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAT+B,CAAD,CAAlC;;AAcA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACrBN,IAAAA,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAoB,sBAAqBF,CAAC,CAACG,cAAe,EAA1D;AACH,GAFD;;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACa,GAAN,CAAU,yDAAV,EAAqEC,IAArE,CAA0EC,GAAG,IAAIV,QAAQ,CACrFU,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAcC,IAAD,IAAW;AACvB,aAAQ;AACDC,QAAAA,IAAI,EAAED,IAAI,CAACE,OADV;AAEDR,QAAAA,cAAc,EAAEM,IAAI,CAACN,cAFpB;AAGDS,QAAAA,MAAM,EAAEH,IAAI,CAACG;AAHZ,OAAR;AAKJ,KANG,CADqF,CAAzF,EAQGC,KARH,CAQSC,GAAG,IAAIA,GARhB;AASH,GAVQ,EAUN,EAVM,CAAT;AAWA,SACI,oBAAC,QAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,OAAO,EAAEf,WAHb;AAII,IAAA,cAAc,EAAE,MAJpB;AAKI,IAAA,UAAU,EAAEJ,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;AAED,eAAgBH,UAAU,CAACC,IAAD,CAA1B","sourcesContent":["import { MessageBox } from 'react-chat-elements';\nimport { ChatItem, MessageList, ChatList } from 'react-chat-elements'\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom'\n\nfunction Chat(props) {\n    const [chats, setChats] = useState([\n        {\n            id: 1,\n            name: 'Kuanysh'\n        },\n        {\n            id: 2,\n            name: 'Zhanerke'\n        },\n        {\n            id: 3,\n            name: 'Abylai'\n        }\n    ])\n    const handleClick = e => {\n        props.history.push(`/dashboard/message/${e.chattingUserId}`)\n    }\n    useEffect(() => {\n        axios.get('http://10.110.160.50:8008/api/chat?userId=29&secondId=1').then(res => setChats(\n            res.data.map((item) =>  {\n             return  {\n                    text: item.message, \n                    chattingUserId: item.chattingUserId,\n                    userId: item.userId\n                }\n        })\n        )).catch(err => err)\n    }, [])\n    return(\n        <ChatList\n            className='message-list'\n            lockable={true}\n            onClick={handleClick}\n            toBottomHeight={'100%'}\n            dataSource={chats} />\n    )\n}\n\nexport default (withRouter(Chat));"]},"metadata":{},"sourceType":"module"}